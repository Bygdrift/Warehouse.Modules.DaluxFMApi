{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "7508052285157398602"
    }
  },
  "parameters": {
    "moduleName": {
      "type": "string",
      "defaultValue": "DaluxFMApi",
      "metadata": {
        "description": "The name of the module. Only use between 3-24 letters or numers, or the Warehouse can't function. The functionApp gets the same name followed by the \"-resourceGroup.id\". The modulename is a bit complicated to change later, so try to keep it static. It is used in dataLake and database as an identifier of data that comes from this app"
      },
      "maxLength": 24,
      "minLength": 3
    },
    "daluxFMApiKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "A key downloaded from DaluxFM settings > Integrations > API-keys"
      }
    },
    "maxRuns": {
      "type": "int",
      "defaultValue": 20,
      "metadata": {
        "description": "This is a safety so the program will stop if some unintetnded error should ocour. Each run takes 8 minutes. In Hiller√∏d it right now have to run 30 minutes = 4 runs. If you set MaxRuns to 20 it will first timeout after 2,5 hours and that should be plenty of time. And the program will raise an error if it's not enough time"
      }
    },
    "daluxFMDataToFetch": {
      "type": "string",
      "defaultValue": "assets, assetClassifications, buildings, documents, estates, locations, lots, rooms, workorders",
      "metadata": {
        "description": "A comma separated list of data to load"
      }
    },
    "monthsToKeepDataInDataLake": {
      "type": "int",
      "defaultValue": 12,
      "metadata": {
        "description": "How many months back, data should be stored in the Data Lake for safety."
      }
    },
    "scheduleExpression": {
      "type": "string",
      "defaultValue": "0 0 1 * * *",
      "metadata": {
        "description": "How often this module should run. This example runs each night at 1AM UTC. Read more here: https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer?tabs=csharp#ncrontab-expressions"
      }
    },
    "timeZoneId": {
      "type": "string",
      "defaultValue": "Romance Standard Time",
      "metadata": {
        "description": "\"Romance Standard Time\" is Copenhagen. For other timezones, find them here: https://raw.githubusercontent.com/Bygdrift/Warehouse/master/Docs/TimeZoneIds.csv"
      }
    }
  },
  "variables": {
    "functionAppName": "[format('{0}-{1}', parameters('moduleName'), uniqueString(resourceGroup().id))]",
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[format('{0}/{1}', format('keyvault-{0}', uniqueString(resourceGroup().id)), format('Secret--{0}--DaluxFMApiKey', parameters('moduleName')))]",
      "properties": {
        "value": "[parameters('daluxFMApiKey')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-10-01",
      "name": "[format('windows-{0}', uniqueString(resourceGroup().id))]",
      "location": "[variables('location')]",
      "kind": "functionapp",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionAppName')]",
      "kind": "functionapp",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('windows-{0}', uniqueString(resourceGroup().id)))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', 'applicationInsights'), '2020-02-02-preview').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('appstorage{0}', uniqueString(resourceGroup().id)), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('appstorage{0}', uniqueString(resourceGroup().id))), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "HostName",
              "value": "[format('{0}.azurewebsites.net', variables('functionAppName'))]"
            },
            {
              "name": "DaluxFMDataToFetch",
              "value": "[parameters('daluxFMDataToFetch')]"
            },
            {
              "name": "ModuleName",
              "value": "[parameters('moduleName')]"
            },
            {
              "name": "MonthsToKeepDataInDataLake",
              "value": "[string(parameters('monthsToKeepDataInDataLake'))]"
            },
            {
              "name": "MaxRuns",
              "value": "[string(parameters('maxRuns'))]"
            },
            {
              "name": "ScheduleExpression",
              "value": "[parameters('scheduleExpression')]"
            },
            {
              "name": "TimeZoneId",
              "value": "[parameters('timeZoneId')]"
            },
            {
              "name": "VaultUri",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', format('keyvault-{0}', uniqueString(resourceGroup().id))), '2019-09-01').vaultUri]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('appstorage{0}', uniqueString(resourceGroup().id)), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('appstorage{0}', uniqueString(resourceGroup().id))), '2019-06-01').keys[0].value)]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('windows-{0}', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}/{1}', variables('functionAppName'), 'web')]",
      "properties": {
        "repoUrl": "https://github.com/Bygdrift/Warehouse.Modules.DaluxFMApi",
        "branch": "master",
        "isManualIntegration": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', format('keyvault-{0}', uniqueString(resourceGroup().id)), 'add')]",
      "properties": {
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-02-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list",
                "set",
                "delete"
              ]
            },
            "tenantId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-02-01', 'full').identity.tenantId]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    }
  }
}